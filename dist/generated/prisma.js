"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var prisma_binding_1 = require("prisma-binding");
/**
 * Type Defs
*/
var typeDefs = "type AggregateTodo {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createTodo(data: TodoCreateInput!): Todo!\n  updateTodo(data: TodoUpdateInput!, where: TodoWhereUniqueInput!): Todo\n  deleteTodo(where: TodoWhereUniqueInput!): Todo\n  upsertTodo(where: TodoWhereUniqueInput!, create: TodoCreateInput!, update: TodoUpdateInput!): Todo!\n  updateManyTodoes(data: TodoUpdateInput!, where: TodoWhereInput): BatchPayload!\n  deleteManyTodoes(where: TodoWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  todoes(where: TodoWhereInput, orderBy: TodoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Todo]!\n  todo(where: TodoWhereUniqueInput!): Todo\n  todoesConnection(where: TodoWhereInput, orderBy: TodoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TodoConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  todo(where: TodoSubscriptionWhereInput): TodoSubscriptionPayload\n}\n\ntype Todo implements Node {\n  id: ID!\n  text: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TodoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TodoEdge]!\n  aggregate: AggregateTodo!\n}\n\ninput TodoCreateInput {\n  text: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TodoEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Todo!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TodoOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TodoPreviousValues {\n  id: ID!\n  text: String!\n}\n\ntype TodoSubscriptionPayload {\n  mutation: MutationType!\n  node: Todo\n  updatedFields: [String!]\n  previousValues: TodoPreviousValues\n}\n\ninput TodoSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TodoSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TodoSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TodoSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TodoWhereInput\n}\n\ninput TodoUpdateInput {\n  text: String\n}\n\ninput TodoWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TodoWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TodoWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TodoWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  text: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  text_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  text_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  text_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  text_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  text_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  text_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  text_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  text_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  text_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  text_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  text_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  text_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  text_not_ends_with: String\n}\n\ninput TodoWhereUniqueInput {\n  id: ID\n}\n";
exports.Prisma = prisma_binding_1.makePrismaBindingClass({ typeDefs: typeDefs });
//# sourceMappingURL=prisma.js.map